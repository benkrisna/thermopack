# Example for Compiling and linking C++ executables using thermopack.
# This example assumes that libthermopack.a has already been built. The path to libthermopack.a
# is set in `libthermopack_path`.
# 
# Note: This is an example build for static linkage, so we also need to link libgfortran, libquadmath
#       and lapack. See CMakeLists.txt for examples using dynamic linking.
# 
# Note: On macOS (arm64), you might need to 
#   export CC=/opt/homebrew/bin/gcc-13
#   export CXX=/opt/homebrew/bin/g++-13
# before running cmake, in order to force compilation for arm64.
cmake_minimum_required(VERSION 3.2)

string(ASCII 27 Esc)
set(ColourRed "${Esc}[31m")
set(ColourBlue "${Esc}[34m")

set(libthermopack_path "${CMAKE_SOURCE_DIR}/../../bin/libthermopack_optim_gfortran_Darwin.a")
set(libgfortran_path "/opt/homebrew/lib/gcc/13/libgfortran.a;/opt/homebrew/lib/gcc/13/libquadmath.a") # Set to appropriate path

project(cppExamples)
set(THERMOPACK_HEADERS "${CMAKE_SOURCE_DIR}/../cppThermoPack")

set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wfatal-errors -std=c++17")

set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")


add_executable(basic basic.cpp)
target_include_directories(basic PUBLIC ${THERMOPACK_HEADERS})

add_executable(tp_properties tp_properties.cpp)
target_include_directories(tp_properties PUBLIC ${THERMOPACK_HEADERS})

find_package(LAPACK)

if (NOT LAPACK_FOUND)
    message("${ColourRed}Did not find Lapack! exiting ...")
    return()
endif()

message("${ColourBlue}Using libthermopack at : ${libthermopack_path}")
message("${ColourBlue}Using cppThermopack headers at : ${THERMOPACK_HEADERS}")
message("${ColourBlue}Using libgfortran at : ${libgfortran_path}")
message("${ColourBlue}Using liblapack at : ${LAPACK_LIBRARIES}")

target_link_libraries(basic PUBLIC ${libthermopack_path} ${libgfortran_path} ${LAPACK_LIBRARIES})
target_link_libraries(tp_properties PUBLIC ${libthermopack_path} ${libgfortran_path} ${LAPACK_LIBRARIES})